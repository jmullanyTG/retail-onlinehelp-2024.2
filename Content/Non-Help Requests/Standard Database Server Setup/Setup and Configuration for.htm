<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" xml:lang="en-us">
    <head><title></title>
        <link href="../../Resources/Stylesheets/Demand Management Standard Database Server Setup (Windows).doc.css" rel="stylesheet" />
    </head>
    <body>
        <h1 class="Heading1">Setup and Configuration for MS SQL Server</h1>
        <h2 class="Heading2">Installation - Microsoft Updates</h2>
        <p>With the underlying operating system now configured, we can start to install MS SQL Server. Run the setup program from the ISO.</p>
        <p>The following is based on an install for SQL Server 2019, but the same install process applies to later versions.</p>
        <p>At the Microsoft Update section, make sure to <b>not</b> include MS SQL updates/patches into the standard patches roster. Uncheck the box below.</p>
        <p>
            <img src="../../Resources/Images/Demand Management Standard Database Server Setup (Windows).doc/Setup and Configuration for.png" class="img_26" />
        </p>
        <h2 class="Heading2">Installation - Features Selection</h2>
        <p>At the Feature Selection section, these are the minimum features required for a standard Demand Management database configuration. Make sure they are selected as shown.</p>
        <p>(Note: Analysis Service is optional. Please inquire with Professional Service / Product Team if SSAS is applicable to the client.)</p>
        <p>
            <img src="../../Resources/Images/Demand Management Standard Database Server Setup (Windows).doc/Setup and Configuration for_1.png" class="img_27" />
        </p>
        <h2 class="Heading2">
            <br />Installation - Server Configuration</h2>
        <p>At the Server Configuration section, set the Service Account for SQL Server Agent, SQL Database Engine, SQL Analysis Services to the service account created earlier, with associated password. Change the Startup Type as shown below. </p>
        <p>Important: <b>Be sure to check Grant Perform Volume Maintenance Task privilege to SQL Server Database Engine Service</b></p>
        <p>Note: If installing SSAS, set its Startup Type to Manual.</p>
        <p>
            <img src="../../Resources/Images/Demand Management Standard Database Server Setup (Windows).doc/Setup and Configuration for_2.png" class="img_28" />
        </p>
        <h2 class="Heading2">Installation - Database Engine Configuration</h2>
        <h3 class="Heading3">Server Configuration</h3>
        <p>At the Database Engine Configuration section, be sure to select Mixed Mode as the Authentication Mode. Enter the password alpha123! </p>
        <p class="p_3">Specify SQL Server administrators. It is good practice to include your own user, to ensure an alternative way to login to the SQL server. <i>Add the local system Administrators group and the SQLService user that was created earlier</i> (Note: TG prefers Service Accounts, thus the “SQLService” user mentioned here is no longer applicable).</p>
        <p>
            <img src="../../Resources/Images/Demand Management Standard Database Server Setup (Windows).doc/Setup and Configuration for_3.png" class="img_29" />
        </p>
        <h3 class="Heading3">Data Directories</h3>
        <p>Still within the Database Engine Configuration section, click the Data Directories tab. Assign the following directories</p>
        <p>Data root directory: M:\SQLData\System</p>
        <p>User database directory: M:\SQLData</p>
        <p>User database log directory: L:\SQLLogs</p>
        <p>Backup directory: G:\SQLBackups</p>
        <p>
            <img src="../../Resources/Images/Demand Management Standard Database Server Setup (Windows).doc/Setup and Configuration for_4.png" class="img_30" />
        </p>
        <h3 class="Heading3">TempDB</h3>
        <p>Click the TempDB tab. The example below is using typical values based on a system that has 4 NVMe disks. However, use the values written below (not in the screenshot) if deploying onto a system with less than 4 NVMe disks.<br /><br />Note: TempDB Data Files are now allowed to grow 1GB-2GB as some JE tasks oftentimes exceed the fixed size that we were accustomed to assigning to the TempDB files.</p>
        <p>Set Number of files to 8</p>
        <p>For Initial size (MB), use a value of 12800 </p>
        <p>Set Autogrowth (MB) to 1024</p>
        <p>Change the Data directory to point to T:\TempDB</p>
        <p>For TempDB log files, Initial size (MB), use a value of 2560 </p>
        <p>TempDB log files Autogrowth (MB) value of 256</p>
        <p class="p_3">Log directory is D:\TempDB (Screenshot still shows drive T: but this has been changed to drive D in Azure)</p>
        <p>
            <img src="../../Resources/Images/Demand Management Standard Database Server Setup (Windows).doc/Setup and Configuration for_5.png" class="img_29" />
        </p>
        <h3 class="Heading3">Maximum Degree of Parallelism (MaxDOP)</h3>
        <p>Navigate to the MaxDOP tab. Adjust this setting according to what you think is applicable to the specific environment based on Microsoft’s recommendation found here - <a href="https://learn.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-max-degree-of-parallelism-server-configuration-option?view=sql-server-ver15">Configure the max degree of parallelism (server configuration option) - SQL Server</a> </p>
        <p>
            <img src="../../Resources/Images/Demand Management Standard Database Server Setup (Windows).doc/Setup and Configuration for_6.png" class="img_31" />
        </p>
        <h3 class="Heading3">Memory</h3>
        <p>Navigate to the Memory tab. In most cases, the Recommended value by Microsoft for the Max Server Memory is appropriate to the needs of the DM/JE App. Adjust this value as needed. </p>
        <p>If you are opting for the recommended value, tick the checkbox next to the “Click here to accept the recommended memory config…” </p>
        <p>
            <img src="../../Resources/Images/Demand Management Standard Database Server Setup (Windows).doc/Setup and Configuration for_7.png" class="img_31" />
        </p>
        <h2 class="Heading2">Installation - Analysis Services Configuration</h2>
        <h3 class="Heading3">Server Configuration</h3>
        <p>Next, proceed to Analysis Services Configuration. Again, it is good practice to include your own user, to ensure an alternative way to login to the SQL server. <i>Similar to the previous section, add the local system Administrators group and the SQLService user that was created earlier</i> (TG prefers Service Accounts. Use the appropriate service account).<br /><br />Note: Screenshot showing SQL 2017 installer, but this step should be the same as its 2019 counterpart.</p>
        <p>
            <img src="../../Resources/Images/Demand Management Standard Database Server Setup (Windows).doc/Setup and Configuration for_8.png" class="img_32" />
        </p>
        <h3 class="Heading3">Data Directories</h3>
        <p>Click the Data Directories tab. Configure the paths as shown below.</p>
        <p>Data directory: M:\SSASData</p>
        <p>Log file directory: L:\SSASLogs</p>
        <p>Temp directory: D:\TempDB (Screenshot still shows drive T: but this has been changed to drive D in Azure)</p>
        <p>Backup directory: G:\SQLBackups</p>
        <p>
            <img src="../../Resources/Images/Demand Management Standard Database Server Setup (Windows).doc/Setup and Configuration for_9.png" class="img_33" />
        </p>
        <p>Click Next to step through all subsequent sections, keep all default values and at this point, let SQL Server continue installation.</p>
        <h2 class="Heading2">Installation - Latest CU Update</h2>
        <p>After initial installation has completed, install the latest CU update from Microsoft <a href="https://docs.microsoft.com/en-us/sql/database-engine/install-windows/latest-updates-for-microsoft-sql-server?view=sql-server-ver15">Latest updates and version history for SQL Server</a> </p>
        <p>
            <img src="../../Resources/Images/Demand Management Standard Database Server Setup (Windows).doc/Setup and Configuration for_10.png" class="img_34" />
        </p>
        <h2 class="Heading2">Installation - SQL Server Management Studio (SSMS)</h2>
        <p>Next to install SQL Management Studio (SSMS). The latest version can be obtained from Microsoft <a href="https://docs.microsoft.com/en-us/sql/ssms/download-sql-server-management-studio-ssms?view=sql-server-ver15">Download SQL Server Management Studio (SSMS)</a>. </p>
        <p>There are no configuration settings needed for this, just click Next &gt; and OK to install with all defaults.</p>
        <p>At this point, it will popup with a confirmation box asking to Restart the system. Proceed with this and let the system reboot. </p>
        <h2 class="Heading2">Configuration - Enable Named Pipes, Shared Memory and TCP/IP</h2>
        <p>After the system has rebooted, load up the SQL Server Configuration Manager.</p>
        <p>Right-click Start menu , click Run , type SQLServerManager14.msc , Click Run or press Enter</p>
        <p>Click the drop-down menu for SQL Server Network Configuration and select Protocols for MSSQLSERVER</p>
        <p>Ensure that Shared Memory, Named Pipes and TCP/IP are all set to Enabled</p>
        <p>Click the drop-down menu for SQL Native Client 11.0 Configuration and select Client Protocols</p>
        <p>Ensure that the same values as above are also set to Enabled</p>
        <p>
            <img src="../../Resources/Images/Demand Management Standard Database Server Setup (Windows).doc/Setup and Configuration for_11.png" class="img_35" />
        </p>
        <h2 class="Heading2">Configuration - Trace Flags</h2>
        <p>These are the applicable trace flags that are enabled during installation as Global and Startup Trace Flags:</p>
        <p>SQL Server 2016/2017:</p>
        <ul class="ul_3">
            <li>
                <p>3226</p>
            </li>
            <li>
                <p>4199</p>
            </li>
            <li>
                <p>7412</p>
            </li>
            <li>
                <p>7752</p>
            </li>
        </ul>
        <p>SQL Server 2019:</p>
        <ul class="ul_3">
            <li>
                <p>3226</p>
            </li>
            <li>
                <p>4199</p>
            </li>
            <li>
                <p>2451</p>
            </li>
        </ul>
        <p>Modify the $traceFlags variable in the code below as needed based on the above list.</p>
        <p>Now to set Trace Flags. Using Powershell (Admin) run the following code:</p>
        <MadCap:codeSnippet>
            <MadCap:codeSnippetCopyButton />
            <MadCap:codeSnippetBody MadCap:useLineNumbers="False" MadCap:lineNumberStart="1" MadCap:continue="False" xml:space="preserve">clear

#Get SQL Server Instance Path:
$SQLService = "SQL Server (MSSQLSERVER)";
$SQLInstancePath = "";
$SQLServiceName = ((Get-Service | WHERE { $_.DisplayName -eq $SQLService }).Name).Trim();
If ($SQLServiceName.contains("`$")) { $SQLServiceName = $SQLServiceName.SubString($SQLServiceName.IndexOf("`$")+1,$SQLServiceName.Length-$SQLServiceName.IndexOf("`$")-1) }
foreach ($i in (get-itemproperty "HKLM:\SOFTWARE\Microsoft\Microsoft SQL Server").InstalledInstances)
{
  If ( ((Get-ItemProperty "HKLM:\SOFTWARE\Microsoft\Microsoft SQL Server\Instance Names\SQL").$i).contains($SQLServiceName) )
  { $SQLInstancePath = "HKLM:\SOFTWARE\Microsoft\Microsoft SQL Server\"+`
  (Get-ItemProperty "HKLM:\SOFTWARE\Microsoft\Microsoft SQL Server\Instance Names\SQL").$i}
}

#Create New SQL Server Startup Parameters
$ParamNumber = "3"
$traceFlags = @("-T3226","-T4199")
For ($i=0; $i -lt $traceFlags.Length; $i++) {
    $ParamNumber = 3+$i
    $traceFlags[$i]
    New-ItemProperty -Path "$SQLInstancePath\MSSQLServer\Parameters" -Name ("SQLArg$ParamNumber") -Value $traceFlags[$i] -PropertyType String -Force | Out-Null
    (Get-ItemProperty "$SQLInstancePath\MSSQLServer\Parameters" | Select SQLArg*  | Format-List | Out-String ).trim() -replace "SQLArg","`tSQLArg"
    }

Restart-Service -DisplayName "SQL Server (MSSQLSERVER)" -Force</MadCap:codeSnippetBody>
        </MadCap:codeSnippet>
        <h2 class="Heading2">Configuration - 3rd party tools/hook-ins</h2>
        <p>We can now proceed with installing the extra components needed for a standard Demand Management database deployment.</p>
        <ul class="ul_3">
            <li>
                <p>SentryOne Plan Explorer and SSMS Add-in </p>
                <p class="BasicNote">Please contact support to obtain the following file: <span class="Emphasis">PlanExplorerInstaller.exe</span></p>
            </li>
        </ul>
        <p>Click Accept and Install. There are no configuration settings needed for this, just click Next &gt; and OK to install with all defaults.</p>
        <p>
            <img src="../../Resources/Images/Demand Management Standard Database Server Setup (Windows).doc/Setup and Configuration for_13.png" class="img_37" />
        </p>
        <ul class="ul_3">
            <li>
                <p>Microsoft SQL Server Data-Tier Application Framework (x64)</p>
                <p class="BasicNote">Please contact support to obtain the following file: <span class="Emphasis">DacFramework.msi</span></p>
            </li>
        </ul>
        <p>Click Next to install. Again, there are no configuration settings needed for this, just click Next &gt; and OK to install with all defaults.</p>
        <p>
            <img src="../../Resources/Images/Demand Management Standard Database Server Setup (Windows).doc/Setup and Configuration for_15.png" class="img_38" />
        </p>
        <p>The above DacFramework.msi is an older version more appropriate with SQL Server 2012. <br /><br />To install the latest DacFramework, do the following:<br />1/ Install the latest .NET Framework - One link is <a href="https://dotnet.microsoft.com/en-us/learn/dotnet/hello-world-tutorial/install">.NET Tutorial - Hello World in 5 minutes</a> . Follow the instruction in this tutorial</p>
        <p>2/ In PowerShell, run the following command:</p>
        <MadCap:codeSnippet>
            <MadCap:codeSnippetCopyButton />
            <MadCap:codeSnippetBody MadCap:useLineNumbers="False" MadCap:lineNumberStart="1" MadCap:continue="False" xml:space="preserve">dotnet add package Microsoft.SqlServer.DacFx</MadCap:codeSnippetBody>
        </MadCap:codeSnippet>
        <h2 class="Heading2">Configuration - Scripts</h2>
        <p>The next step is to configure the database, schema, master user and database file locations by use of various scripts. Please contact support to obtain the scripts.</p>
        <p>sp_WhoIsActive_v12.00: <b>sp_WhoIsActive.sql</b></p>
        <p>Agent XPs Reconfigure: <b>SQLAgentXPs_Reconfigure.sql</b></p>
        <p>Set Model Recovery to Simple with NO_WAIT: <b>MODEL to Simple Recovery.sql</b></p>
        <p>&#160;</p>
        <p>The next two scripts are to be run in conjunction with one another.</p>
        <p>&#160;</p>
        <h4 class="Heading4">What Memory Settings</h4>
        <p>This outputs a calculated numerical value for inputting into the memory settings of the next script. </p>
        <p><span class="Emphasis">WhatMemorySettings.sql</span>
        </p>
        <p>&#160;</p>
        <p>Copy this value, and paste into the 'max server memory (MB)' line on this script. Then, execute/run it.</p>
        <p><span class="Emphasis">Server Settings 2017/2019: ServerSettings2017.sql</span>
        </p>
        <p>
            <img src="../../Resources/Images/Demand Management Standard Database Server Setup (Windows).doc/Server Settings 2017 2019.png" class="LargeImages" />
        </p>
        <p>Physical database files and their constituent parts now need to be assigned to the correct file and folder locations. Important: The following steps need to be carried out in chronological order.</p>
        <p>First, run this script: <span class="Emphasis">Move model n msdb databases</span></p>
        <p>
            <img src="../../Resources/Images/Demand Management Standard Database Server Setup (Windows).doc/Movel Model n.png" class="LargeImages" />
        </p>
        <p>Secondly, <span class="Emphasis">Stop SQL Server</span> and <span class="Emphasis">SQL Server Agent</span> services</p>
        <p>
            <img src="../../Resources/Images/Demand Management Standard Database Server Setup (Windows).doc/Stop Services.png" class="LargeImages" />
        </p>
        <p>Thirdly, to move the physical files themselves. Move all <span class="Strong">*.mdf files</span> from orginal location M:\SQLData\System\MSSQL14.MSSQLSERVER\MSSQL\DATA</p>
        <p>to</p>
        <p>M:\SQLData\System</p>
        <p>(Tip: Clicking Hidden items in the Explorer top-bar menu, under View tab, helps to distinguish file types)</p>
        <p>
            <img src="../../Resources/Images/Demand Management Standard Database Server Setup (Windows).doc/File Explorer Tiles.png" class="LargeImages" />
        </p>
        <p>
            <img src="../../Resources/Images/Demand Management Standard Database Server Setup (Windows).doc/Hidden Files.png" class="LargeImages" />
        </p>
        <p>Fourth, to move all <span class="Emphasis">*.ldf</span> files from original location</p>
        <p>M:\SQLData\System\MSSQL14.MSSQLSERVER\MSSQL\DATA</p>
        <p>to</p>
        <p>L:\SQLLogs\System</p>
        <p>
            <img src="../../Resources/Images/Demand Management Standard Database Server Setup (Windows).doc/Logs System.png" class="LargeImages" />
        </p>
        <p>Fifth, next we need to change SQL Server service startup parameters.</p>
        <p>Right-click Start menu , click Run , type SQLServerManager14.msc , Click Run or press Enter</p>
        <p>Click on SQL Server Services in the left-hand menu. Right-click SQL Server (MSSQLSERVER) and click Properties. Select the Startup Parameters tab. Change the paths as shown below for the data location (-d switch) and log files location (-l switch)</p>
        <p>-dM:\SQLData\System\master.mdf</p>
        <p>-lL:\SQLLogs\System\mastlog.ldf</p>
        <p>The entry for the -e switch can be ignored</p>
        <p>Click OK to save new values</p>
        <p><span class="Emphasis">Start SQL Server (MSSQLSERVER)</span> and <span class="Emphasis">SQL Server Agent</span> services back up</p>
        <p>
            <img src="../../Resources/Images/Demand Management Standard Database Server Setup (Windows).doc/Start Services Back Up.png" class="LargeImages" />
        </p>
        <p>Sixth, to verify the file new file locations. Head back to SSMS and ru</p>
        <MadCap:codeSnippet>
            <MadCap:codeSnippetCopyButton />
            <MadCap:codeSnippetBody MadCap:useLineNumbers="False" MadCap:lineNumberStart="1" MadCap:continue="False" xml:space="preserve">select * from sys.master_files</MadCap:codeSnippetBody>
        </MadCap:codeSnippet>
        <p>The output of the physical_name column should look similar to the screenshot below</p>
        <p>
            <img src="../../Resources/Images/Demand Management Standard Database Server Setup (Windows).doc/Output Physical Name Column.png" class="LargeImages" />
        </p>
        <p>You may also run the following query to check the location of the system data files and logs:</p>
        <MadCap:codeSnippet>
            <MadCap:codeSnippetCopyButton />
            <MadCap:codeSnippetBody MadCap:useLineNumbers="False" MadCap:lineNumberStart="1" MadCap:continue="False" xml:space="preserve">SELECT db.name, mf.name, mf.physical_name FROM sys.databases db
JOIN sys.master_files mf ON db.database_id = mf.database_id</MadCap:codeSnippetBody>
        </MadCap:codeSnippet>
        <p>It is now a good idea to install utilities that handle automated functions like scheduled backup items.</p>
        <p>Run these in SSMS as a New Query.</p>
        <p class="BasicNote">Contact Support to obtain the necessary files.</p>
        <p>DBAdmin: <span class="Emphasis">DatabaseScript_DBAdmin_1.0.0.0.sql</span></p>
        <p>Hallengren Solution: <span class="Emphasis">MaintenanceSolution-2022-01-02.sql</span></p>
        <p>Then, run the following additional queries to add into the Job Scheduler</p>
        <p>Add Schedule to DatabaseIntegrityCheck - SYSTEM_DATABASES Job: <span class="Emphasis">Add Schedule to DatabaseIntegrityCheck - SYSTEM_DATABASES Job.sql</span></p>
        <p>Add Schedule to DatabaseIntegrityCheck - USER_DATABASES Job: <span class="Emphasis">Add Schedule to DatabaseIntegrityCheck - USER_DATABASES Job.sql</span></p>
        <p>Add Schedule to CommandLog Cleanup Job: <span class="Emphasis">Add Schedule to CommandLog Cleanup Job.sql</span></p>
        <p>Add Schedule to Output File Cleanup Job: <span class="Emphasis">Add Schedule to Output File Cleanup Job.sql</span></p>
        <p>Add Schedule to sp_delete_backuphistory Job: <span class="Emphasis">Add Schedule to sp_delete_backuphistory Job.sql</span></p>
        <p>Add Schedule to sp_purge_jobhistory Job: <span class="Emphasis">Add Schedule to sp_purge_jobhistory Job.sql</span></p>
    </body>
</html>